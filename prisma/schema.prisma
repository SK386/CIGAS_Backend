// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  TEACHER
  ADMIN
}

model User {
  id        Int       @id @default(autoincrement())
  FirstName String
  LastName  String
  email     String    @unique
  password  String
  phone     String?
  role      UserRole
  Student   Student[]
  Teacher   Teacher[]
}

model Student {
  id        Int    @id @default(autoincrement())
  user_id Int
  school_id Int
  User    User @relation(fields: [user_id], references: [id])
  School    School @relation(fields: [school_id], references: [id])
}

model Teacher {
  id        Int    @id @default(autoincrement())
  user_id   Int          @unique
  school_id   Int
  User      User       @relation(fields: [user_id], references: [id])
  School      School       @relation(fields: [school_id], references: [id])
  Disclipline Discipline[]
}

model Discipline {
  id         Int      @id @default(autoincrement())
  teacher_id Int
  school_id  Int
  name       String
  Teacher    Teacher? @relation(fields: [teacher_id], references: [id])
  School     School?  @relation(fields: [school_id], references: [id])
}

model Class {
  id           Int       @id @default(autoincrement())
  school_year  String
  class_year   Int
  classroom_id Int
  school_id    Int
  Classroom    Classroom @relation(fields: [classroom_id], references: [id])
  School       School    @relation(fields: [school_id], references: [id])
}

model Classroom {
  id        Int     @id @default(autoincrement())
  number    Int
  capacity  Int
  storey    Int
  block     String
  school_id Int
  Class     Class[]
  School    School  @relation(fields: [school_id], references: [id])
}

model School {
  id         Int          @id @default(autoincrement())
  name       String
  Class      Class[]
  Classroom  Classroom[]
  Student    Student[]
  Teacher    Teacher[]
  Discipline Discipline[]
}
