// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model School {
  uuid          Int            @id @default(autoincrement())
  subsidiary    String         @unique
  Student       Student?
  Teacher       Teacher?
  Student_class Student_class?
  Classroom     Classroom?
  Class         Class?
}

model Classroom {
  uuid      Int     @id @default(autoincrement())
  number    Int     @unique
  school    School  @relation(fields: [school_Id], references: [uuid])
  school_Id Int     @unique
  capacity  Int
  storey    Int
  block     String?
  Class     Class?
}

model Class {
  uuid          Int            @id @default(autoincrement())
  school_year   String
  classroom_    Classroom      @relation(fields: [classroom_id], references: [uuid])
  classroom_id  Int            @unique
  school        School         @relation(fields: [school_Id], references: [uuid])
  school_Id     Int            @unique
  class_year    Int
  Student_class Student_class?
}

model Person {
  uuid          Int      @id @default(autoincrement())
  name          String
  last_name     String
  contact_email String   @unique
  phone         String?
  role          String
  Teacher       Teacher?
  Student       Student?
}

model Teacher {
  uuid      Int    @id @default(autoincrement())
  person    Person @relation(fields: [person_Id], references: [uuid])
  person_Id Int    @unique
  school    School @relation(fields: [school_Id], references: [uuid])
  school_Id Int    @unique
}

model Teacher_discipline {
  uuid Int @id
}

model Student {
  uuid      Int    @id @default(autoincrement())
  person    Person @relation(fields: [person_Id], references: [uuid])
  person_Id Int    @unique
  school    School @relation(fields: [school_Id], references: [uuid])
  school_Id Int    @unique
}

model Student_class {
  uuid      Int    @id @default(autoincrement())
  class     Class  @relation(fields: [class_id], references: [uuid])
  class_id  Int    @unique
  school    School @relation(fields: [school_Id], references: [uuid])
  school_Id Int    @unique
}
